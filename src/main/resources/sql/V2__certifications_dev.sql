-- Drop/Delete objects
-- Drop SCD triggers
DROP TRIGGER CERT_DEV.CERTIFICATIONS_FACT_T1;
DROP TRIGGER CERT_DEV.CERTIFICATIONS_FACT_T2;
DROP TRIGGER CERT_DEV.CERTIFICATIONS_FACT_T3;
DROP TRIGGER CERT_DEV.CERTIFICATIONS_FACT_T4;
ALTER TABLE CERT_DEV.CERTIFICATIONS_FACT DROP CONSTRAINT CERTIFICATIONS_FACT_PK;
DROP VIEW CERT_DEV.CERTIFICATIONS_SCD_V;
DROP VIEW CERT_DEV.CERTIFICATIONS_FACT_V;
DROP TABLE CERT_DEV.CERTIFICATIONS_FACT;
DROP TABLESPACE TS_CERTIFICATION2;
COMMIT;

CREATE TABLESPACE TS_CERTIFICATION2 MANAGED BY AUTOMATIC STORAGE;

-- Create EDS table
CREATE TABLE CERT_DEV.CERTIFICATIONS_FACT (
	  CERT_ID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 NO CYCLE CACHE 20 NO ORDER)
  ,   VENDOR VARCHAR(128) NOT NULL
  ,   THEATRE VARCHAR(128)
  ,   CERTIFICATION_CODE VARCHAR(1000) NOT NULL
  ,   CERTIFICATE_DESCRIPTION VARCHAR(1000) NOT NULL
  ,   CERT_DATE DATE
  ,   SK_CERT_DATE INTEGER
  ,   EXPIRY_DATE DATE
  ,   SK_EXPIRY_DATE INTEGER
  ,   RECERT_DATE DATE
  ,   SK_RCERT_DATE INTEGER
  ,   EXAM_CERT VARCHAR(128)
  ,   QUALIFICATION_TYPE VARCHAR(128)
  ,   CERTIFICATION_STATUS VARCHAR(128)
  ,   CERTIFICATION_PROGRAM_STATUS VARCHAR(128)
  ,   DATA_SOURCE VARCHAR(128)
  ,   DATE_OF_UPLOAD DATE
  ,   SK_DATE_OF_UPLOAD INTEGER
  ,   EVIDENCE_UPLOADED VARCHAR(128)
  ,   VALIDATE VARCHAR(128)
  ,   VALIDATED_BY VARCHAR(128)
  ,   DELETE VARCHAR(128)
  ,   CURRENT_INDICATOR INTEGER NOT NULL
  ,   EFFECTIVE_DATE DATE NOT NULL
  ,   SK_EFFECTIVE_DATE INTEGER NOT NULL
  ,   EXPIRATION_DATE DATE NOT NULL
  ,   SK_EXPIRATION_DATE INTEGER NOT NULL
  ,   ETL_TIMESTAMP TIMESTAMP NOT NULL
  ,   AUDIT_TIMESTAMP TIMESTAMP NOT NULL
  ,   VORTEX_INTERNET_EMAIL VARCHAR(128) NOT NULL
  ,   CNUM VARCHAR(9)
  ,   SK_EMPLOYEE INTEGER NOT NULL
  ,   ROW_STATUS_CD CHAR(1) NOT NULL DEFAULT 'I'
  ,   VERSION_NUM INTEGER NOT NULL DEFAULT 1
  ,   EFF_TMS TIMESTAMP NOT NULL
  ,   EXPIR_TMS TIMESTAMP NOT NULL      
  )
  IN TS_CERTIFICATION2
  DATA CAPTURE NONE 
  COMPRESS NO;

--Alter table to add primary key for Surrogate Id
ALTER TABLE CERT_DEV.CERTIFICATIONS_FACT ADD CONSTRAINT CERTIFICATIONS_FACT_PK PRIMARY KEY (CERT_ID);

--Create UNIQUE INDEX based on the natural key and SCD attributes
CREATE UNIQUE INDEX CERT_DEV.CERTIFICATIONS_FACT_UX1 
    ON CERT_DEV.CERTIFICATIONS_FACT (
      CNUM
    , VORTEX_INTERNET_EMAIL
    , VENDOR
    , CERTIFICATION_CODE
    , CERTIFICATE_DESCRIPTION
    , QUALIFICATION_TYPE
    , DATA_SOURCE
    , EFF_TMS
    , EXPIR_TMS
    )
    MINPCTUSED 0
    DISALLOW REVERSE SCANS
    PAGE SPLIT SYMMETRIC
    COLLECT SAMPLED DETAILED STATISTICS
    COMPRESS NO;

--Add comments to the table
COMMENT ON TABLE CERT_DEV.CERTIFICATIONS_FACT IS '';

--Add comments to the columns
COMMENT ON COLUMN CERT_DEV.CERTIFICATIONS_FACT.CERT_ID IS 'Surrogate key for CERT_DEV.CERTIFICATIONS_FACT.';
COMMENT ON COLUMN CERT_DEV.CERTIFICATIONS_FACT.VENDOR IS '';
COMMENT ON COLUMN CERT_DEV.CERTIFICATIONS_FACT.THEATRE IS '';
COMMENT ON COLUMN CERT_DEV.CERTIFICATIONS_FACT.CERTIFICATION_CODE IS '';
COMMENT ON COLUMN CERT_DEV.CERTIFICATIONS_FACT.CERTIFICATE_DESCRIPTION IS '';
COMMENT ON COLUMN CERT_DEV.CERTIFICATIONS_FACT.CERT_DATE IS '';
COMMENT ON COLUMN CERT_DEV.CERTIFICATIONS_FACT.SK_CERT_DATE IS '';
COMMENT ON COLUMN CERT_DEV.CERTIFICATIONS_FACT.EXPIRY_DATE IS '';
COMMENT ON COLUMN CERT_DEV.CERTIFICATIONS_FACT.SK_EXPIRY_DATE IS '';
COMMENT ON COLUMN CERT_DEV.CERTIFICATIONS_FACT.RECERT_DATE IS '';
COMMENT ON COLUMN CERT_DEV.CERTIFICATIONS_FACT.SK_RCERT_DATE IS '';
COMMENT ON COLUMN CERT_DEV.CERTIFICATIONS_FACT.EXAM_CERT IS '';
COMMENT ON COLUMN CERT_DEV.CERTIFICATIONS_FACT.QUALIFICATION_TYPE IS '';
COMMENT ON COLUMN CERT_DEV.CERTIFICATIONS_FACT.CERTIFICATION_STATUS IS '';
COMMENT ON COLUMN CERT_DEV.CERTIFICATIONS_FACT.CERTIFICATION_PROGRAM_STATUS IS '';
COMMENT ON COLUMN CERT_DEV.CERTIFICATIONS_FACT.DATA_SOURCE IS '';
COMMENT ON COLUMN CERT_DEV.CERTIFICATIONS_FACT.DATE_OF_UPLOAD IS '';
COMMENT ON COLUMN CERT_DEV.CERTIFICATIONS_FACT.SK_DATE_OF_UPLOAD IS '';
COMMENT ON COLUMN CERT_DEV.CERTIFICATIONS_FACT.EVIDENCE_UPLOADED IS '';
COMMENT ON COLUMN CERT_DEV.CERTIFICATIONS_FACT.VALIDATE IS '';
COMMENT ON COLUMN CERT_DEV.CERTIFICATIONS_FACT.VALIDATED_BY IS '';
COMMENT ON COLUMN CERT_DEV.CERTIFICATIONS_FACT.DELETE IS '';
COMMENT ON COLUMN CERT_DEV.CERTIFICATIONS_FACT.CURRENT_INDICATOR IS '';
COMMENT ON COLUMN CERT_DEV.CERTIFICATIONS_FACT.EFFECTIVE_DATE IS '';
COMMENT ON COLUMN CERT_DEV.CERTIFICATIONS_FACT.SK_EFFECTIVE_DATE IS '';
COMMENT ON COLUMN CERT_DEV.CERTIFICATIONS_FACT.EXPIRATION_DATE IS '';
COMMENT ON COLUMN CERT_DEV.CERTIFICATIONS_FACT.SK_EXPIRATION_DATE IS '';
COMMENT ON COLUMN CERT_DEV.CERTIFICATIONS_FACT.ETL_TIMESTAMP IS '';
COMMENT ON COLUMN CERT_DEV.CERTIFICATIONS_FACT.AUDIT_TIMESTAMP IS '';
COMMENT ON COLUMN CERT_DEV.CERTIFICATIONS_FACT.VORTEX_INTERNET_EMAIL IS '';
COMMENT ON COLUMN CERT_DEV.CERTIFICATIONS_FACT.CNUM IS '';
COMMENT ON COLUMN CERT_DEV.CERTIFICATIONS_FACT.SK_EMPLOYEE IS '';
COMMENT ON COLUMN CERT_DEV.CERTIFICATIONS_FACT.ROW_STATUS_CD IS 'Row Status code. ''I'' - Insert, ''U'' - Update, ''D'' - Delete.';
COMMENT ON COLUMN CERT_DEV.CERTIFICATIONS_FACT.VERSION_NUM IS 'Version number of the record''s state.';
COMMENT ON COLUMN CERT_DEV.CERTIFICATIONS_FACT.EFF_TMS IS 'Timestamp indicating when the particular record became effective within the slow changing dimension. Note that each record of a SCD represents a ''state'' of the object/data.';
COMMENT ON COLUMN CERT_DEV.CERTIFICATIONS_FACT.EXPIR_TMS IS 'Timestamp indicating when the particular record has expired (is no longer in effect) within the slow changing dimension.. 9999-12-31-23.59.59.999999 represents the current state of the record.';

--Views
CREATE VIEW CERT_DEV.CERTIFICATIONS_FACT_V
AS
SELECT CERT_ID
     , VENDOR
     , THEATRE
     , CERTIFICATION_CODE
     , CERTIFICATE_DESCRIPTION
     , CERT_DATE
     , SK_CERT_DATE
     , EXPIRY_DATE
     , SK_EXPIRY_DATE
     , RECERT_DATE
     , SK_RCERT_DATE
     , EXAM_CERT
     , QUALIFICATION_TYPE
     , CERTIFICATION_STATUS
     , CERTIFICATION_PROGRAM_STATUS
     , DATA_SOURCE
     , DATE_OF_UPLOAD
     , SK_DATE_OF_UPLOAD
     , EVIDENCE_UPLOADED
     , VALIDATE
     , VALIDATED_BY
     , DELETE
     , CURRENT_INDICATOR
     , EFFECTIVE_DATE
     , SK_EFFECTIVE_DATE
     , EXPIRATION_DATE
     , SK_EXPIRATION_DATE
     , ETL_TIMESTAMP
     , AUDIT_TIMESTAMP
     , VORTEX_INTERNET_EMAIL
     , CNUM
     , SK_EMPLOYEE
FROM   CERT_DEV.CERTIFICATIONS_FACT
WHERE  EXPIR_TMS = '9999-12-31-23.59.59.999999';

CREATE VIEW CERT_DEV.CERTIFICATIONS_SCD_V
AS
SELECT *
FROM   CERT_DEV.CERTIFICATIONS_FACT;



--Create Triggers to manage SCD
--T1 Set Effective and Expiration Timestamps on new/inserted records
CREATE TRIGGER CERT_DEV.CERTIFICATIONS_FACT_T1
    BEFORE INSERT ON CERT_DEV.CERTIFICATIONS_FACT
    REFERENCING  NEW AS NEWVAL
    FOR EACH ROW
SET EFF_TMS       = CURRENT TIMESTAMP
  ,  EXPIR_TMS     = '9999-12-31-23.59.59.999999'
  ,  ROW_STATUS_CD = 'I';

--T2 Expire previous record for the natural key (EXPIR_TMS = N.EFF_TMS - 1 MICROSECOND)
CREATE TRIGGER CERT_DEV.CERTIFICATIONS_FACT_T2
    AFTER INSERT ON CERT_DEV.CERTIFICATIONS_FACT
    REFERENCING  NEW AS N
    FOR EACH ROW
UPDATE CERT_DEV.CERTIFICATIONS_FACT
  SET EXPIR_TMS     = N.EFF_TMS - 1 MICROSECOND 
    , ROW_STATUS_CD = 'H'
WHERE CNUM = N.CNUM
  AND VORTEX_INTERNET_EMAIL = N.VORTEX_INTERNET_EMAIL
  AND VENDOR = N.VENDOR
  AND CERTIFICATION_CODE = N.CERTIFICATION_CODE
  AND CERTIFICATE_DESCRIPTION = N.CERTIFICATE_DESCRIPTION
  AND QUALIFICATION_TYPE = N.QUALIFICATION_TYPE
  AND DATA_SOURCE = N.DATA_SOURCE
  AND EXPIR_TMS     = '9999-12-31-23.59.59.999999'
  AND EFF_TMS       < N.EFF_TMS;

--T3 Change DELETE transaction to expire previous record for the natural key.
CREATE TRIGGER CERT_DEV.CERTIFICATIONS_FACT_T3
    INSTEAD OF DELETE ON CERT_DEV.CERTIFICATIONS_FACT_V
    REFERENCING  OLD AS O
    FOR EACH ROW
UPDATE CERT_DEV.CERTIFICATIONS_FACT
  SET EXPIR_TMS     = CURRENT TIMESTAMP
    , ROW_STATUS_CD = 'D'
WHERE CNUM = O.CNUM
  AND VORTEX_INTERNET_EMAIL = O.VORTEX_INTERNET_EMAIL
  AND VENDOR = O.VENDOR
  AND CERTIFICATION_CODE = O.CERTIFICATION_CODE
  AND CERTIFICATE_DESCRIPTION = O.CERTIFICATE_DESCRIPTION
  AND QUALIFICATION_TYPE = O.QUALIFICATION_TYPE
  AND DATA_SOURCE = O.DATA_SOURCE
  AND EXPIR_TMS     = '9999-12-31-23.59.59.999999';

--T4 Change UPDATE transaction to insert a new record.
-- The insert will invoke T1 to set the effective and expiration timestamp and
-- T2 to expire previous record for the natural key.
CREATE TRIGGER CERT_DEV.CERTIFICATIONS_FACT_T4
    INSTEAD OF UPDATE ON CERT_DEV.CERTIFICATIONS_FACT_V
    REFERENCING  NEW AS N
    FOR EACH ROW
INSERT INTO CERT_DEV.CERTIFICATIONS_FACT
 (VENDOR, THEATRE, CERTIFICATION_CODE, CERTIFICATE_DESCRIPTION, CERT_DATE, SK_CERT_DATE, EXPIRY_DATE, SK_EXPIRY_DATE, RECERT_DATE, SK_RCERT_DATE, EXAM_CERT, QUALIFICATION_TYPE, CERTIFICATION_STATUS, CERTIFICATION_PROGRAM_STATUS, DATA_SOURCE, DATE_OF_UPLOAD, SK_DATE_OF_UPLOAD, EVIDENCE_UPLOADED, VALIDATE, VALIDATED_BY, DELETE, CURRENT_INDICATOR, EFFECTIVE_DATE, SK_EFFECTIVE_DATE, EXPIRATION_DATE, SK_EXPIRATION_DATE, ETL_TIMESTAMP, AUDIT_TIMESTAMP, VORTEX_INTERNET_EMAIL, CNUM, SK_EMPLOYEE)
VALUES
 (N.VENDOR, N.THEATRE, N.CERTIFICATION_CODE, N.CERTIFICATE_DESCRIPTION, N.CERT_DATE, N.SK_CERT_DATE, N.EXPIRY_DATE, N.SK_EXPIRY_DATE, N.RECERT_DATE, N.SK_RCERT_DATE, N.EXAM_CERT, N.QUALIFICATION_TYPE, N.CERTIFICATION_STATUS, N.CERTIFICATION_PROGRAM_STATUS, N.DATA_SOURCE, N.DATE_OF_UPLOAD, N.SK_DATE_OF_UPLOAD, N.EVIDENCE_UPLOADED, N.VALIDATE, N.VALIDATED_BY, N.DELETE, N.CURRENT_INDICATOR, N.EFFECTIVE_DATE, N.SK_EFFECTIVE_DATE, N.EXPIRATION_DATE, N.SK_EXPIRATION_DATE, N.ETL_TIMESTAMP, N.AUDIT_TIMESTAMP, N.VORTEX_INTERNET_EMAIL, N.CNUM, N.SK_EMPLOYEE);
 
grant select on table CERT_DEV.CERTIFICATIONS_FACT_V to role read_access_dev;
grant select on table CERT_DEV.CERTIFICATIONS_SCD_V to role read_access_dev;